---
name: Build and Deploy webapp

env:
  #Artifact Name: csye6225-webapp-${{github.run_number}}.zip
  ARTIFACT_NAME: csye6225-webapp-${{github.run_number}}.zip
  CODEDEPLOY_APPLICATION_NAME: mywebapp
  CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME: mywebapp
  AWS_REGION: us-west-2

on:
  push:
      branches: [ main ]

jobs:
  ci_cd:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 1.8
        uses: actions/setup-java@v1
        with: 
          java-version: 1.8
      - name: Build with gradle
        run: |
          echo "${{env.ARTIFACT_NAME}}"
          pwd
          ls
          ./gradlew clean assemble
          pwd
          ls -al
          ls -al build/libs
      - name: Build Deployemnt Artifact
        run: |
          mkdir codedeploy_artifact
          zip -r ${{env.ARTIFACT_NAME}} codedeploy_artifact/
          ls -al
          pwd
          cd codedeploy_artifact
          pwd
          ls -al
          cd .. 
          pwd
          ls -al
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credential@v1
        with: 
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_KEY}}
          aws-region: ${{secrets.AWS_REGION}}
      - name: Copy Artifact to S3
        run: |
          aws s3 sync ./codedeploy_artifact s3://${{secrets.S3_CODEDEPLOY_BUCKET}}
      - name:  Codedeploy API Call 
        run: |
          output=$(aws deploy create-deployment \
            --application-name ${{env.CODE_APPLICATION_NAME}} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name  ${{env.CODE_APPLICATION_DEPLOYMENT_GROUP_NAME}} \
            --description "CSYE 6225 Code Deploy" \
            --s3-location bucket=${{secrets.S3_CODEDEPLOY_BUCKET}},key=${{env.ARTIFACT_NAME}},bundleType=zip \
            --region ${{env.AWS_REGION}} \
            --output json )
            echo $output
            dId=$(echo $output | jq -r '.deploymentId')
            aws deploy wait deployment-successful --deployment-id $dId



